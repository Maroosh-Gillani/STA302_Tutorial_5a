---
title: "(Web)scraping Through the Lives of Australian Prime Ministers"
author: "Maroosh Gillani"
thanks: "Code and data are available at: UPDATE THIS "
date: "23 January 2024"
date-format: long
format: pdf
number-sections: true
bibliography: references.bib
---

```{r, echo=false}
# This code is modified from the code provided in professor Rohan's 
# textbook "Telling Stories with Data": https://tellingstorieswithdata.com/07-gather.html#prime-ministers-of-the-united-kingdom

# libraries
library(ggplot2)
library(dplyr)
library(rvest)
library(xml2)
library(tidyr)
library(stringr)

# read in data about Australian prime ministers from Wikipedia
raw_data <-
  read_html(
    "https://en.wikipedia.org/wiki/List_of_prime_ministers_of_Australia"
  )

# save as a html file
write_html(raw_data, "pms.html")

raw_data <- read_html("pms.html")

# specifically get the table containing pm info
parse_data_selector_gadget <-
  raw_data |>
  html_element(".wikitable") |>
  html_table()

# clean_names function

clean_names <- function(data) {
  colnames(data)[colnames(data) == "Name(Birth–Death)Constituency"] <- "name_birth_death_constituency"
  return(data)
}


# cleaning
parsed_data <-
  parse_data_selector_gadget |> 
  clean_names() |> 
  select(name_birth_death_constituency) |> 
  filter(name_birth_death_constituency != "Name(Birth–Death)Constituency") |> 
  distinct() 

# cleaning
initial_clean <-
  parsed_data |>
  separate(
    name_birth_death_constituency, into = c("name", "not_name"), sep = "\\(", extra = "merge",
  ) |> 
  mutate(date = str_extract(not_name, "[[:digit:]]{4}–[[:digit:]]{4}"),
         born = str_extract(not_name, "born[[:space:]][[:digit:]]{4}")
         ) |>
  select(name, date, born)
  
cleaned_data <-
  initial_clean |>
  separate(date, into = c("birth", "died"), 
           sep = "–") |>   # PMs who have died have their birth and death years 
  # separated by a hyphen, but we need to be careful with the hyphen as it seems 
  # to be a slightly odd type of hyphen and we need to copy/paste it.
  mutate(
    born = str_remove_all(born, "born[[:space:]]"),
    birth = if_else(!is.na(born), born, birth)
  ) |> # Alive PMs have slightly different format
  select(-born) |>
  rename(born = birth) |> 
  mutate(across(c(born, died), as.integer)) |> 
  mutate(Age_at_Death = died - born) |> 
  distinct() # Some of the PMs had two goes at it.

head(cleaned_data)
```